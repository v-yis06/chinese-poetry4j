<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.poetry.mapper.PoetryAuthorMapper">
    
    <resultMap type="PoetryAuthor" id="PoetryAuthorResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <sql id="selectPoetryAuthorVo">
        select id, name, description, create_time, create_by, update_time, update_by from poetry_author
    </sql>

    <select id="selectPoetryAuthorList" parameterType="PoetryAuthor" resultMap="PoetryAuthorResult">
        <include refid="selectPoetryAuthorVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
        </where>
    </select>
    
    <select id="selectPoetryAuthorById" parameterType="String" resultMap="PoetryAuthorResult">
        <include refid="selectPoetryAuthorVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertPoetryAuthor" parameterType="PoetryAuthor">
        insert into poetry_author
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null  and id != ''">id,</if>
            <if test="name != null  and name != ''">name,</if>
            <if test="description != null  and description != ''">description,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null  and id != ''">#{id},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="description != null  and description != ''">#{description},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
         </trim>
    </insert>

    <insert id="batchInsertPoetryAuthor" parameterType="List">
        insert into poetry_author
        (name, description, create_time)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.name}, #{item.description}, SYSDATE())
        </foreach>
    </insert>

    <update id="updatePoetryAuthor" parameterType="PoetryAuthor">
        update poetry_author
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="description != null  and description != ''">description = #{description},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePoetryAuthorById" parameterType="String">
        delete from poetry_author where id = #{id}
    </delete>

    <delete id="deletePoetryAuthorByIds" parameterType="String">
        delete from poetry_author where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>